<!DOCTYPE html>
<html>
<head>
  <style>
    body {font-family: 'helvetica neue', helvetica, arial, sans-serif;}
    .lights {
      overflow:auto;
      width:96%;
      padding:2%;
      background-color:black;
      text-align:center;
    }
    h2 {
      font-size:1.6em;
      font-weight:normal;
      color:hsla(160, 80%, 55%, 1);
    }
    i {
      display:inline-block; margin:2.4%;
      width:40px; height:40px;
      background-color:hsla(0, 80%, 50%, 0);
      border:20px solid hsla(0, 80%, 50%, 0);
      border-radius:40px;
      opacity:0.2;
    }
  </style>
</head>

<body>
  <section class="lights">
    <h2>Allow Mic & Make Some Noise!</h2>
    <i></i>
    <i></i>
    <i></i>
    <i></i>
    <i></i>
    <i></i>
    <i></i>
    <i></i>

    <i></i>
    <i></i>
    <i></i>
    <i></i>
    <i></i>
    <i></i>
    <i></i>
    <i></i>
    
    <i></i>
    <i></i>
    <i></i>
    <i></i>
    <i></i>
    <i></i>
    <i></i>
    <i></i>

    <i></i>
    <i></i>
    <i></i>
    <i></i>
    <i></i>
    <i></i>
    <i></i>
    <i></i>
  </section>
</body>

<script type="text/javascript">
//Audio stuff---------------------------------------------
var contextClass = (window.AudioContext || window.webkitAudioContext);
//get mic in
navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
navigator.getUserMedia(
  {audio:true},
  gotStream,
  function(err) {
    console.log("The following error occured: " + err);
  } 
);

//for sound to be passed into
var audioBuffer;
//for analyser node
var analyzer;
//set empty array hald of fft size or equal to frequencybincount (you could put frequency bin count here if created)
var frequencyData = new Uint8Array(1024);
if (contextClass) {
  // Web Audio API is available.
  var context = new contextClass();
  console.warn('yes!');
} else {
  // Web Audio API is not available. Ask the user to use a supported browser.
  alert("Oh nos! It appears your browser does not support the Web Audio API, please upgrade or use a different browser");
  console.warn('poobags');
}

// success callback when requesting audio input stream
function gotStream(stream) {
    createAnalyser()
    // Create an AudioNode from the stream.
    var mediaStreamSource = context.createMediaStreamSource(stream);
    connectAnalyser(mediaStreamSource)
    update();
}

function createAnalyser() {
  //create analyser node
  analyzer = context.createAnalyser();
  //set size of how many bits we analyse on
  analyzer.fftSize = 2048;
}

function connectAnalyser(source) {
  //connect to source
  source.connect(analyzer);
}

function playSound() {
  //passing in file
  createAnalyser();
  //creating source node
  var source = context.createMediaElementSource(audioElement);
  connectAnalyser(source);
}

function update() {
  requestAnimationFrame(update);
  //constantly getting feedback from data
  analyzer.getByteFrequencyData(frequencyData);

// Animation stuff--------------------------------
var lights = document.getElementsByTagName('i');
var totalLights = lights.length;

for (var i=0; i<totalLights; i++) {
  //set light colours
  var lightColour = i*10;
  lights[i].style.backgroundColor = 'hsla('+lightColour+',  80%, 50%, 0.8)';
  lights[i].style.borderColor = 'hsla('+lightColour+',  80%, 50%, 1)';
  //flash on frequency
  var freqDataKey = i*2;
  if (frequencyData[freqDataKey] > 160){
    //start animation on element
    lights[i].style.opacity = "1";
  } else {
    lights[i].style.opacity = "0.2";
  }
}
};

</script>
</html>