<!DOCTYPE html>
<html>
<head>
	<style>
		.lights {
			overflow:auto;
		  width:100%;
		  padding:10% 0;
		  background-color:black;
		}
		i {
		  display:block; margin:10px;
		  float: left;
		  width:30px; height:30px;
		  background-color:hsla(200, 80%, 50%, 0.8);
		  border:10px solid hsla(200, 80%, 50%, 1);
		  border-radius:2px;
		  /*call animation*/
		  animation:flashing 1s infinite;
		  animation-play-state:paused;
		}

		@keyframes flashing {
		  0%   { opacity: 0; }
		  50%   { opacity: 1; }
		  100% { opacity: 0; }
		}
	</style>
</head>

<body>
	<section class="lights">
  	<i></i>
  	<i></i>
  	<i></i>
  	<i></i>
  	<i></i>
  	<i></i>
  	<i></i>
  	<i></i>
	</section>

	<audio id="soundFile" src="/octave.ogg"></audio>
</body>

<script type="text/javascript">
//Audio stuff---------------------------------------------
//source http://chimera.labs.oreilly.com/books/1234000001552/ch01.html#s01_2
var contextClass = (window.AudioContext);
//for sound to be passed into
var audioBuffer;
//for analyser node
var analyzer;
//set empty array hald of fft size or equal to frequencybincount (you could put frequency bin count here if created)
var frequencyData = new Uint8Array(32);

  // window.webkitAudioContext || 
  // window.mozAudioContext || 
  // window.oAudioContext || 
  // window.msAudioContext);
if (contextClass) {
  // Web Audio API is available.
  var context = new contextClass();
  console.warn('yes!');
} else {
	console.warn('poobags');
  // Web Audio API is not available. Ask the user to use a supported browser.
}

//GET AUDIO FILE load from server
function loadSound() {
	var audioFileUrl = '/octave.ogg';
	var request = new XMLHttpRequest();
	request.open("GET", audioFileUrl, true);
	request.responseType = "arraybuffer";

	request.onload = function() {
		//take from http request and decode into buffer
		context.decodeAudioData(request.response, function(buffer) {
	    	audioBuffer = buffer;
	     });
		}
	request.send();
}

function createAnalyser(source) {
	//create analyser node
	analyzer = context.createAnalyser();
	//set size of how many bits we analyse on
	analyzer.fftSize = 64;
	//connect to source
	source.connect(analyzer);
	//pipe to speakers
	analyzer.connect(context.destination);
}

function playSound(buffer) {
	//creating source node
	var source = context.createBufferSource();
	//passing in file
	source.buffer = buffer;
	createAnalyser(source);
	//start playing
	source.start(0);
}

function update() {
  requestAnimationFrame(update);
  //constantly getting feedback from data
	analyzer.getByteFrequencyData(frequencyData);
	// console.log(frequencyData[0]);

// Animation stuff--------------------------------
var lights = document.getElementsByTagName('i');
var totalLights = lights.length;
for (var i = 0; i < 32; i++) {}



// for (var i=0; i<totalLights; i++) {
// 	if (frequencyData[i] > 100){
// 		//start animation on element
// 		lights[i].style.animationPlayState = "running";
// 	} else {
// 		lights[i].style.animationPlayState = "paused";
// 	}
// }
};


// function to check for audio element
// if no audio element, keep checking..
function waitForAudio(){
  if(typeof audioBuffer !== "undefined"){
		playSound(audioBuffer);
		update();
  }
  else{
      setTimeout(function(){
      	console.log("waiting for audio");
      		loadSound();
          waitForAudio();
      },25);
  }
}

// load audio file here
waitForAudio();







</script>
</html>